Урок №7. Schedulers

RxJava не предоставляет прямой работы с потоками. Для этого в RxJava существуют Schedulers или планировщики.
Планировщики представляют из себя разные реализации пулла поток.
В RxJava по умолчанию реализованно 5 планировщиков: io, computation, newThread, single, from.

Schedulers.io()

Этот планировщик основывается на неограниченном пуле потоков и используется для интенсивной работы с вводом-выводом.
Например, доступ к файловой системе, выполнение сетевых вызовов, доступ к базе данных и так далее.
Количество потоков в этом планировщике неограничено и может расти по мере необходимости.

Schedulers.computation()

Этот планировщик используется для выполнения работы, высоко нагружающей ЦП, такой как обработка больших объемов данных,
изображений и так далее. Планировщик основывается на ограниченном пуле потоков с размером в количество доступных процессоров.
Так как этот планировщик подходит только для интенсивной работы с ЦП — количество его потоков ограничено.
Сделано это для того, чтобы потоки не конкурировали за процессорное время и не простаивали.

Schedulers.newThread()

Этот планировщик создает совершенно новый поток при каждом вызове.
В данном случае использование пула потоков не принесет никакой выгоды. 
Потоки очень затратно создавать и уничтожать. 
Вы должны быть осторожны и не злоупотреблять чрезмерным созданием потоков,
так как это может привести в замедлению работы системы и переполнению памяти. 
Новый поток будет создаваться для обработки каждого элемента, полученного из observable-источника.
В идеале вы должны использовать этот планировщик довольно редко,
в основном для выведения в отдельный поток долго работающих частей программы.

Schedulers.single()

Этот планировщик основывается на единственном потоке, который используется для последовательного выполнения задач.
Он может быть очень полезен, когда у вас есть набор фоновых заданий в разных местах вашего приложения,
но нельзя допустить одновременного выполнения более чем одного из этих задаий.

Schedulers.from(Executor executor)

Этот планировщик будет основываться на вашем собственном Executor.
Может возникнуть ситуация,
в которой необходимо будет выполнять определенные задачи в планировщике на основании собственной логики распределения потоков.

AndroidSchedulers.mainThread()

Это специальный планировщик, который недоступен в библиотеке RxJava.
Необходимо использовать расширяющую библиотеку RxAndroid для доступа к этому планировщику.
Этот планировщик полезен в Android приложениях для выполнения действий в потоке пользовательского интерфейса.
По умолчанию этот планировщик ставит задания в очередь в Looper, связанный с основным потоком,
но есть возможность переопределения: AndroidSchedulers.from(Looper looper).
